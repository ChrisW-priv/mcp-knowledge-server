name: "Terraform"

on:
  push:
    branches: ["main"]
  pull_request:

# Add permissions for OIDC
permissions:
  contents: read
  id-token: write # Required for OIDC authentication to your cloud provider

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    # The 'production' environment is optional but good for protection rules
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          project_id: "mcp-knowledge-server"
          workload_identity_provider: "projects/372502133685/locations/global/workloadIdentityPools/github/providers/github-actions"

      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        # No 'with' block is needed for local execution

      # Initialize a new or existing Terraform working directory
      # Terraform will automatically read the backend configuration from your .tf files
      - name: Terraform Init
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: cd infrastructure && terraform init

      - name: Terraform Apply
        # The original condition had a syntax error with extra quotes. This is the correct way.
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: cd infrastructure && TF_VAR_github_token_secret_value=${{ secrets.TF_VAR_GITHUB_TOKEN_SECRET_VALUE }} terraform apply -auto-approve -var-file=./environments/deployed.tfvars
